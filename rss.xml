<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>IncidentHub Blog Blog</title>
        <link>https://incidenthub-cloud.github.io</link>
        <description>IncidentHub Blog Blog</description>
        <lastBuildDate>Tue, 04 Jun 2024 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[The Benefits of a Single Incident Management System]]></title>
            <link>https://incidenthub-cloud.github.io/The-Benefits-of-a-Single-Incident-Management-System</link>
            <guid>https://incidenthub-cloud.github.io/The-Benefits-of-a-Single-Incident-Management-System</guid>
            <pubDate>Tue, 04 Jun 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[How many monitoring tools do you have?]]></description>
            <content:encoded><![CDATA[<p>How many monitoring tools do you have?</p>
<p>Chances are at least 2-3. One tool usually does not cover all cases, and it’s usually a combination of self-managed and managed tools.
Self-managed gives you more control over custom configurations and cost. Managed ones take away the headache of running it yourself.</p>
<p>Prometheus is the de-facto standard for monitoring these days if you have a modern application stack and you want to manage your own
monitoring. It is metrics-based, i.e., it uses metrics as the source of data from all the monitored systems. There are
<a href="https://prometheus.io/docs/instrumenting/exporters/" target="_blank" rel="noopener noreferrer">ready-made exporters</a> for almost all popular infrastructure components.
You can send your application and business metrics to Prometheus too with
<a href="https://opentelemetry.io/docs/specs/otel/metrics/sdk_exporters/prometheus/" target="_blank" rel="noopener noreferrer">OpenTelemetry exporters</a>.</p>
<p>This model does not work for all aspects of your service. E.g. If you want to monitor external properties like your website, or use synthetic
monitoring to check your customer-facing APIs from global locations, you could use something like Pingdom or UptimeRobot. This becomes another source of
data about your service's uptime.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="many-monitors-one-incident-management-system">Many Monitors, One Incident Management System<a href="https://incidenthub-cloud.github.io/The-Benefits-of-a-Single-Incident-Management-System#many-monitors-one-incident-management-system" class="hash-link" aria-label="Direct link to Many Monitors, One Incident Management System" title="Direct link to Many Monitors, One Incident Management System">​</a></h3>
<p>A downside of having more than one monitoring system in place, regardless of the need, is that you have multiple sources of data. You have to
consult multiple systems if you want to know the overall status. However, it is important that you receive alerts in one single incident and
on-call management system. This allows a single place from where your on-call teams can get paged.</p>
<p>So ensuring that all your monitoring tools can integrate with your on-call system is crucial.</p>
<p>A typical Prometheus setup might look like:</p>
<p><img decoding="async" loading="lazy" alt="Monitoring setup" src="https://incidenthub-cloud.github.io/assets/images/unified-monitoring-1-d240eb899cfb88d5c23acced0646e4a9.png" width="1755" height="451" class="img_ev3q"></p>
<p>If you have other monitoring systems, you should be able to route those alerts into your on-call/incident response system. Most tools support this:</p>
<p><img decoding="async" loading="lazy" alt="Monitoring setup" src="https://incidenthub-cloud.github.io/assets/images/unified-monitoring-2-4430ab0ecc8fa814d4c52a4e7eb4b775.png" width="1754" height="481" class="img_ev3q"></p>
<p><a href="https://incidenthub.cloud/" target="_blank" rel="noopener noreferrer">IncidentHub</a> monitors your external SaaS and cloud providers and notifies you when they have incidents.
It can easily integrate into your existing incident management system.</p>
<p><img decoding="async" loading="lazy" alt="Monitoring setup" src="https://incidenthub-cloud.github.io/assets/images/unified-monitoring-3-b975e3bc6ea9ae196ddfb8dbfb7d0b31.png" width="1754" height="627" class="img_ev3q"></p>
<p>If you’re using PagerDuty, just add a PagerDuty channel and you’re good to go. Check out the <a href="https://docs.incidenthub.cloud/channels" target="_blank" rel="noopener noreferrer">documentation</a> for more.</p>]]></content:encoded>
            <category>monitoring</category>
            <category>incident-management</category>
        </item>
        <item>
            <title><![CDATA[Monitoring Your Third-Party Cloud and SaaS Services is Critical]]></title>
            <link>https://incidenthub-cloud.github.io/Monitoring-Your-Third-Party-Cloud-SaaS-Services-is-Critical</link>
            <guid>https://incidenthub-cloud.github.io/Monitoring-Your-Third-Party-Cloud-SaaS-Services-is-Critical</guid>
            <pubDate>Mon, 20 May 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[If you have a software-based business, you are using at least a few cloud based tools. It does not matter if you are a solo developer, or part of a 50-member team in a large organization. Take this random list and chances are you are using at least half of them:]]></description>
            <content:encoded><![CDATA[<p>If you have a software-based business, you are using at least a few cloud based tools. It does not matter if you are a solo developer, or part of a 50-member team in a large organization. Take this random list and chances are you are using at least half of them:</p>
<ul>
<li>Zoom</li>
<li>Google Workspace</li>
<li>Slack</li>
<li>Public cloud/PaaS - GCP/AWS/Azure/Render/Heroku/Railway/DigitalOcean/Hetzner</li>
<li>PagerDuty/Opsgenie</li>
<li>Cdnjs</li>
<li>DockerHub</li>
<li>GitLab/GitHub</li>
<li>TravisCI/CircleCI/Semaphore</li>
<li>Let’s Encrypt</li>
</ul>
<p>Your entire business - irrespective of org or market size - including your development tools, collaboration/communication tools, infrastructure and hosting, monitoring, even email - is dependent on services that you don’t control. They are provided by other vendors.</p>
<p>Of course, you pay for some of them and they all have SLAs. Having an SLA does not translate to 100% uptime. Companies will try their best to meet SLAs - which promise a percentage of uptime (usually 99.xx). There are going to be incidents in your providers at some point, and the effect will cascade to the service that you provide to your customers. This means that your own product’s SLA can be breached due to causes outside your control.</p>
<p>Can you not ask the service provider to notify you directly when this happens? Unlikely, unless you are a really big enterprise. However, most of them have public status pages where you can sign up to receive these alerts over SMS, email, Slack, etc.</p>
<p>The downside is - if you have 50 such services, you have to sign up on 50 pages, one by one. If you want to change your notification channel (another Slack channel, or SMS instead of Slack), you have to edit it on each of those 50 pages.</p>
<p>How does knowing about such issues help you?
A few examples (true stories) will illustrate this</p>
<ul>
<li>Public cloud outages that are yet to impact your applications. If you get to know beforehand that your cloud vendor has an ongoing incident in your region, you can take preventive steps so that your applications are not affected.</li>
<li>Paging service outages. Your on-call teams can miss alerts because your paging service is unable to send alerts.</li>
<li>Delayed/missing messages in your communication tool. Your remote teams are not in sync because your comm tool is dropping only some, not all, messages.</li>
<li>Your hosted Git repo is throwing errors, while your customer waits for a critical bug fix.</li>
</ul>
<p>Knowing that there is something wrong with the SaaS/cloud provider gives you an opportunity to do something about it, proactively.</p>
<p>There is no single place, no easy way where you can</p>
<ul>
<li>Choose services to monitor</li>
<li>Choose a channel to receive alerts</li>
</ul>
<p>This is why we built <a href="https://incidenthub.cloud/" target="_blank" rel="noopener noreferrer">IncidentHub</a> - based on years of real-world experience. The UI is very simple so that receiving your first alert does not involve more than 2 steps. Check out the demo video below, and try it out yourself at <a href="https://incidenthub.cloud/" target="_blank" rel="noopener noreferrer">https://incidenthub.cloud/</a></p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/3w-g7fYFtIg" frameborder="0" gesture="media" allow="autoplay; encrypted-media"></iframe>
<p>Originally published at <a href="https://www.linkedin.com/feed/update/urn:li:activity:7196385217270415361/" target="_blank" rel="noopener noreferrer">https://www.linkedin.com/feed/update/urn:li:activity:7196385217270415361/</a></p>]]></content:encoded>
            <category>monitoring</category>
        </item>
    </channel>
</rss>